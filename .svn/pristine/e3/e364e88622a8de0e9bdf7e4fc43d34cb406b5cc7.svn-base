using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

namespace HRIS_APPELECTRIC.Pages.Admin.TK
{
    public partial class viewobt : System.Web.UI.Page
    {
        Employee emp = new Employee();
        Common cm = new Common();
        Timekeeping tk = new Timekeeping();
        public string empno = "";
        string empviewURL = "";
        public int gridtotalcount = 0;
        public string gridrangecount = "";
        string getfrom,getto, getreason, getin, getout, getfiledate;
        public Dictionary<string, string> empInfo = new Dictionary<string, string>();
        protected void Page_Load(object sender, EventArgs e)
        {
            empno = Request.QueryString["id"];
            //if (empno != Session["ACTIVE_EMPNO"].ToString())
            //{

            //    empno = Session["ACTIVE_EMPNO"].ToString();
            //    ScriptManager.RegisterStartupScript(this, this.GetType(),
            //    "alert",
            //    "alert('Injection not allowed!!!');window.location ='viewobt.aspx?id=" + empno + "';",
            //    true);
            //}
            empInfo = emp.GetEmployeeInfoDict(empno);
            if (!IsPostBack)
            {
                refresh();
            }
        }
        void refresh()
        {
            DataTable dt = new DataTable();
            dt = tk.populateGridOBT(empno);
            GridViewList.DataSource = dt;
            GridViewList.DataBind();
            ViewState["EMP_GRID"] = dt;
            ViewState["SORTDR"] = null;
            summary();
        }
        public string getname()
        {
            string name = "";
            name = emp.GetEmployeeName(empno);

            return name;

        }
        void summary()
        {
            gridtotalcount = ((DataTable)ViewState["EMP_GRID"]).Rows.Count;
            int pageIndex = GridViewList.PageIndex;
            int c = (pageIndex > 0 ? 10 * pageIndex : 0) + GridViewList.Rows.Count;
            gridrangecount = (c > 0 ? c : 0) + " - " + gridtotalcount;
        }
        protected void sort_grid(string sort_args)
        {
            DataTable dt = (DataTable)ViewState["EMP_GRID"];
            if (dt.Rows.Count > 0)
            {
                if (Convert.ToString(ViewState["SORTDR"]) == "Asc")
                {
                    dt.DefaultView.Sort = sort_args + " Desc";
                    ViewState["SORTDR"] = "Desc";
                }
                else
                {
                    dt.DefaultView.Sort = sort_args + " Asc";
                    ViewState["SORTDR"] = "Asc";
                }

                GridViewList.DataSource = dt;
                GridViewList.DataBind();
                summary();


            }

        }
        protected void txtItem_TextChanged(object sender, EventArgs e)
        {

            //awong-retrieve textbox values from the grid control during runtime.
            GridViewRow currentRow = (GridViewRow)((TextBox)sender).Parent.Parent;
            string _status = ((TextBox)currentRow.FindControl("txtSearchOBT_Status")).Text;
            string _datefiled = ((TextBox)currentRow.FindControl("txtSearchDateFiled")).Text;
            string _datefrom = ((TextBox)currentRow.FindControl("txtSearchDateFrom")).Text;
            string _dateto = ((TextBox)currentRow.FindControl("txtSearchDateTo")).Text;
            string _in = ((TextBox)currentRow.FindControl("txtSearchTimeIn")).Text;
            string _out = ((TextBox)currentRow.FindControl("txtSearchTimeOut")).Text;
            string _reason = ((TextBox)currentRow.FindControl("txtSearchReason")).Text;
            string _approver1 = ((TextBox)currentRow.FindControl("txtSearchApprover1")).Text;
            string _dapproved1 = ((TextBox)currentRow.FindControl("txtSearchDapproved1")).Text;
            string _approver2 = ((TextBox)currentRow.FindControl("txtSearchApprover2")).Text;
            string _dapproved2 = ((TextBox)currentRow.FindControl("txtSearchDapproved2")).Text;
            string _reason2 = ((TextBox)currentRow.FindControl("txtSearchreasons2")).Text;
            string expr = emp.build_or_like_param(saveSearchParam(_status, _datefiled, _datefrom, _dateto, _in, _out, _reason, _approver1, _dapproved1, _approver2, _dapproved2, _reason2));
            //string expr = "and (license_type like '%" + lictype + "%' or license_no like '%" + licno + "%' or lic_expirydate like '%" + licdate + "%')";
            //GridViewList.DataSource = emp.populateGridSearch((DataTable)ViewState["EMP_GRID"], expr);
            GridViewList.DataSource = tk.populateGridOBTCol(empno, expr);
            GridViewList.DataBind();

            //if (GridViewList.Rows.Count == 0)
            //{
            //    ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('No Data Found !!!');", true);
            //    refresh();
            //}

        }

        protected void ddlStatus_SelectedIndexChanged(object sender, EventArgs e)
        {
            GridViewRow currentRow = (GridViewRow)((DropDownList)sender).Parent.Parent;
            string stat = ((DropDownList)currentRow.FindControl("ddlStat")).SelectedValue.ToString();
            string expr = emp.build_or_like_param(saveSearchParam1(stat));

            GridViewList.DataSource = tk.populateGridOBTCol(empno, expr);
            GridViewList.DataBind();

        }

        Dictionary<string, string> saveSearchParam1(string _status)
        {
            Dictionary<string, string> param = new Dictionary<string, string>();
            param.Add("OBT_Status", "'%" + _status + "%'");


            return param;


        }

        Dictionary<string, string> saveSearchParam(string _status, string _datefiled, string _datefrom, string _dateto, string _in, string _out, string _reason, string _approver1, string _dapproved1, string _approver2, string _dapproved2, string _reason2)
        {
            Dictionary<string, string> param = new Dictionary<string, string>();
            param.Add("OBT_Status", "'%" + _status + "%'");
            param.Add("DateFiled", "'%" + _datefiled + "%'");
            param.Add("DateFrom", "'%" + _datefrom + "%'");
            param.Add("DateTo", "'%" + _dateto + "%'");
            param.Add("TimeIn", "'%" + _in + "%'");
            param.Add("TimeOut", "'%" + _out + "%'");
            param.Add("Reason", "'%" + _reason + "%'");
            param.Add("Approver1", "'%" + _approver1 + "%'");
            param.Add("DateApproved1", "'%" + _dapproved1 + "%'");
            param.Add("Approver2", "'%" + _approver2 + "%'");
            param.Add("DateApproved2", "'%" + _dapproved2 + "%'");
            param.Add("reasons2", "'%" + _reason2 + "%'");


            return param;


        }
        protected void GridViewList_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            GridViewList.PageIndex = e.NewPageIndex;
            refresh();
        }
        protected void GridViewList_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            if (e.CommandName == "Sort")
            {
                sort_grid(e.CommandArgument.ToString());

            }
            if (e.CommandName == "Reset")
            {
                refresh();

            }
            if (e.CommandName == "del")
            {
                getfrom = cm.FormatDate(cm.GetSpecificDataFromDB("DateFrom", "TBL_OBT", "where id = " + e.CommandArgument.ToString() + ""));
                getto = cm.FormatDate(cm.GetSpecificDataFromDB("DateTo", "TBL_OBT", "where id = " + e.CommandArgument.ToString() + ""));
                getreason = cm.FormatDate(cm.GetSpecificDataFromDB("Reason", "TBL_OBT", "where id = " + e.CommandArgument.ToString() + ""));
                getfiledate = cm.FormatDate(cm.GetSpecificDataFromDB("DateFiled", "TBL_OBT", "where id = " + e.CommandArgument.ToString() + ""));
                //getto = cm.FormatDate(cm.GetSpecificDataFromDB("EndDate", "TBL_OBT", "where id = " + e.CommandArgument.ToString() + ""));
                emp.DeleteQuery("TBL_OBT", "where id =" + e.CommandArgument.ToString() + "");
                cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " removed OBT of " + emp.GetEmployeeName(empno) + "with Date From" + getfrom +
                    ". Date To: "+ getto + ". Date Filed: " + getfiledate + ".Reason: " + getreason + ".", "DELETE", "x123", "qwg-23", "DELETE", Session["EMP_ID"].ToString());
                refresh();
                ScriptManager.RegisterStartupScript(this, this.GetType(),
                "alert",
                "alert('Successfully Deleted');",
                true);

            }
            if (e.CommandName == "upd")
            {
                HiddenEmpID.Value = e.CommandArgument.ToString();
                populateUpdateField(e.CommandArgument.ToString());
                openTransDetails(empno);
            }
        }

        public void closeTransDetails()
        {
            upListDetails.Update();

            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            sb.Append(@"<script type='text/javascript'>");
            sb.Append(string.Format(@"$('#{0}').modal('hide')", "listmodal"));
            sb.Append(@"</script>");

            ScriptManager.RegisterStartupScript(this, this.GetType(), "listmodal", sb.ToString(), false);

        }
        public void openTransDetails(string empNo)
        {
            upListDetails.Update();
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            sb.Append(@"<script type='text/javascript'>");
            sb.Append(string.Format(@"$('#{0}').modal('show')", "listmodal"));
            sb.Append(@"</script>");
            ScriptManager.RegisterStartupScript(this, this.GetType(), "listmodal", sb.ToString(), false);
            string username = "", fullname = "", email = "", roles = "";
        }

        public void populateUpdateField(string id)
        {
            upd_from.Value = cm.FormatDateyyyy(cm.GetSpecificDataFromDB("DateFrom", "TBL_OBT", "where id = " + id + ""));
            upd_to.Value = cm.FormatDateyyyy(cm.GetSpecificDataFromDB("DateTo", "TBL_OBT", "where id = " + id + ""));
            upd_Reason.Value = cm.GetSpecificDataFromDB("Reason", "TBL_OBT", "where id = " + id + "");
            upd_in.Value = cm.GetSpecificDataFromDB("TimeIn", "TBL_OBT", "where id = " + id + "");
            upd_out.Value = cm.GetSpecificDataFromDB("TimeOut", "TBL_OBT", "where id = " + id + "");
        }
        protected void lnkbtnXlist_Click(object sender, EventArgs e)
        {
            closeTransDetails();
        }

        protected void btnCreate_Click(object sender, EventArgs e)
        {
            Dictionary<string, string> emailParam = new Dictionary<string, string>();
            string confirmValue = Request.Form["confirm_value"];
            if (confirmValue == "Yes")
            {
                if (cm.ItemExist("TBL_OBT", "*", "where EmpID = '" + empno + "'AND ('" + txtDateFrom.Value + "' BETWEEN DateFrom AND DateTo OR '" + txtDateTo.Value + "' BETWEEN DateFrom AND DateTo) AND (OBT_Status = '1' OR OBT_Status = '2')", ""))
                {
                    ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Duplicate OBT is not allowed.');", true);
                    return;
                }
                if (cm.ItemExist("TBL_HOLIDAY", "*", "where Holiday BETWEEN '"+ txtDateFrom.Value + "' AND '" + txtDateTo.Value + "'", ""))
                {
                    ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Filing OBT during Holiday is not allowed.');", true);
                    return;
                }
                //if (cm.ItemExist("TBL_OBT", "TripDate", "where EmpID = '" + empno + "' and TripDate = '" + TripDate.Value + "' AND OBT_Status = '1'", ""))
                //{
                //    ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Duplicate OBT is not allowed.');", true);
                //    return;
                //}
                if (emp.InsertQueryCommon(saveParam(out emailParam), "TBL_OBT"))
                {
                    //int ret = cm.sendApprove(emailParam, "OBT Approval Request");
                    //if (ret > 0)
                    //{
                        cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " created OBT with Date from " + txtDateFrom.Value + "and Date to "+ txtDateTo.Value + " for " + emp.GetEmployeeName(empno) +
                            ".Date Filed: " + cm.FormatDate(DateTime.Now) + ".Reason: " + Reason.Value + ".", "CREATE", "x123", "qwg-23", "CREATE", Session["EMP_ID"].ToString());
                        ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Successfully Save !!!');", true);
                    //}
                    //else
                    //{
                        //cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " created OBT with Dates from " + txtDateFrom.Value + "and Date to " + txtDateTo.Value + " for " + emp.GetEmployeeName(empno) +
                        //        ".Date Filed: " + cm.FormatDate(DateTime.Now) + ".Reason: " + Reason.Value + ".", "CREATE", "x123", "qwg-23", "CREATE", Session["EMP_ID"].ToString());
                        //ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Successfully Save !!! Email not sent');", true);
                    //}
                    refresh();
                    txtDateFrom.Value = "";
                    txtDateTo.Value = "";
                    Reason.Value = "";
                    tIn.Value = "";
                    tOut.Value = "";
                }
                    
                
            }
        }

        Dictionary<string, string> saveParam(out Dictionary<string, string> emailParam)
        {
            emailParam = new Dictionary<string, string>();
            Dictionary<string, string> param = new Dictionary<string, string>();
            List<string> approver = new List<string>();
            param.Add("EmpID", "'"+empno+"'");
            param.Add("DateFrom", "'" + cm.FormatDateyyyy(txtDateFrom.Value) + "'");
            param.Add("DateTo", "'" + cm.FormatDateyyyy(txtDateTo.Value) + "'");
            //param.Add(EndDate.ID, "'" + EndDate.Value + "'");
            param.Add(Reason.ID, "'" + Reason.Value + "'");
            param.Add("TimeIn", "'" + tIn.Value + "'");
            param.Add("TimeOut", "'" + tOut.Value + "'");
            try
            {
                if (Session["ROLES"].ToString() == "admin")
                {
                    param.Add("OBT_Status", "'1'");
                }
                else
                {
                    param.Add("Approver1", "'" + empInfo["emp_Approver1"] + "'");
                    param.Add("Approver2", "'" + empInfo["emp_Approver2"] + "'");
                    param.Add("Approving", "'" + empInfo["emp_Approver1"] + "'");
                    param.Add("OBT_Status", "'2'");
                }
            }
            catch
            {
                ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Session Expired.');", true);
                Response.Redirect("~/Pages/Login.aspx");
            }
            
            param.Add("FullName", "'" + empInfo["emp_FullName"] + "'");
            param.Add("DateFiled", "'" + cm.FormatDate(DateTime.Now) + "'");
            param.Add("DateApproved", "'" + cm.FormatDate(DateTime.Now) + "'");

            emailParam.Add("EmployeeID", "'" + empno + "'");
            emailParam.Add("FullName", "'" + empInfo["emp_FullName"] + "'");
            emailParam.Add("DateFrom", "'" + txtDateFrom.Value + "'");
            emailParam.Add("DateTo", "'" + txtDateTo.Value + "'");
            emailParam.Add(Reason.ID, "'" + Reason.Value + "'");
            emailParam.Add("TimeIn", "'" + tIn.Value + "'");
            emailParam.Add("TimeOut", "'" + tOut.Value + "'");
            emailParam.Add("DateFiled", "'" + cm.FormatDate(DateTime.Now) + "'");
            emailParam.Add("Approver1", "" + empInfo["emp_Approver1"] + "");
            
            return param;


        }

        Dictionary<string, string> saveUpdateParam(out Dictionary<string, string> emailParam)
        {
            emailParam = new Dictionary<string, string>();
            Dictionary<string, string> param = new Dictionary<string, string>();
            List<string> approver = new List<string>();
            param.Add("EmpID", "'" + empno + "'");
            param.Add("DateFrom", "'" + txtDateFrom.Value + "'");
            param.Add("DateTo", "'" + txtDateTo.Value + "'");
            param.Add(Reason.ID, "'" + upd_Reason.Value + "'");
            param.Add("TimeIn", "'" + upd_in.Value + "'");
            param.Add("TimeOut", "'" + upd_out.Value + "'");
            param.Add("DateFiled", "'" + cm.FormatDate(DateTime.Now) + "'");

            emailParam.Add("EmployeeID", "'" + empno + "'");
            emailParam.Add("FullName", "'" + empInfo["emp_FullName"] + "'");
            emailParam.Add("DateFrom", "'" + txtDateFrom.Value + "'");
            emailParam.Add("DateTo", "'" + txtDateTo.Value + "'");
            emailParam.Add(Reason.ID, "'" + Reason.Value + "'");
            emailParam.Add("TimeIn", "'" + upd_in.Value + "'");
            emailParam.Add("TimeOut", "'" + upd_out.Value + "'");
            emailParam.Add("DateFiled", "'" + cm.FormatDate(DateTime.Now) + "'");
            emailParam.Add("Approver1", "" + empInfo["emp_Approver1"] + "");

            return param;


        }

        protected void btnReset_Click(object sender, EventArgs e)
        {
            txtDateFrom.Value = "";
            txtDateTo.Value = "";
            Reason.Value = "";
            tIn.Value = "";
            tOut.Value = "";

            refresh();
        }

        private void getdata()
        {
            getfrom = cm.FormatDate(cm.GetSpecificDataFromDB("DateFrom", "TBL_OBT", "where id = " + HiddenEmpID.Value + ""));
            getto = cm.FormatDate(cm.GetSpecificDataFromDB("DateTo", "TBL_OBT", "where id = " + HiddenEmpID.Value + ""));
            getreason = cm.GetSpecificDataFromDB("Reason", "TBL_OBT", "where id = " + HiddenEmpID.Value + "");
            getin = cm.GetSpecificDataFromDB("TimeIn", "TBL_OBT", "where id = " + HiddenEmpID.Value + "");
            getout = cm.GetSpecificDataFromDB("TimeOut", "TBL_OBT", "where id = " + HiddenEmpID.Value + "");
        }

        private void addlogs()
        {
            if (getfrom != upd_from.Value)
            {
                cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " changed OBT DATE FROM for " + emp.GetEmployeeName(empno) + " from " + getfrom + " to " + upd_from.Value +
                    ".Date Filed: " + getfiledate + ".Reason: " + getreason + ".", "CHANGE", "x123", "qwg-23", "CHANGE", Session["EMP_ID"].ToString());
            }
            if (getto != upd_to.Value)
            {
                cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " changed OBT DATE TO for " + emp.GetEmployeeName(empno) + " from " + getto + " to " + upd_to.Value,
                    "CHANGE", "x123", "qwg-23", "CHANGE", Session["EMP_ID"].ToString());
            }
            if (getreason != upd_Reason.Value)
            {
                cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " changed OBT REASON for " + emp.GetEmployeeName(empno) + " from " + getreason + " to " + upd_Reason.Value +
                    ".Date Filed: " + getfiledate + ".Reason: " + getreason + ".", "CHANGE", "x123", "qwg-23", "CHANGE", Session["EMP_ID"].ToString());
            }
            if (getin != upd_in.Value)
            {
                cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " changed OBT TIME IN for " + emp.GetEmployeeName(empno) + " from " + getin + " to " + upd_in.Value +
                    ".Date Filed: " + getfiledate + ".Reason: " + getreason + ".", "CHANGE", "x123", "qwg-23", "CHANGE", Session["EMP_ID"].ToString());
            }
            if (getout != upd_out.Value)
            {
                cm.AddLog("User " + Session["FULLNAME"].ToString().ToUpper() + " changed OBT TIME OUT for " + emp.GetEmployeeName(empno) + " from " + getout + " to " + upd_out.Value +
                    ".Date Filed: " + getfiledate + ".Reason: " + getreason + ".", "CHANGE", "x123", "qwg-23", "CHANGE", Session["EMP_ID"].ToString());
            }
        }

        protected void btnsaveUpdate_Click(object sender, EventArgs e)
        {
            TimeSpan tsTimeIn = TimeSpan.Parse(upd_in.Value);
            TimeSpan tsTimeOut = TimeSpan.Parse(upd_out.Value);
            Dictionary<string, string> emailParam = new Dictionary<string, string>();
            if (cm.ItemExist("TBL_OBT", "*", "where EmpID = '" + empno + "'AND ('" + upd_from.Value + "' BETWEEN DateFrom AND DateTo OR '" + upd_to.Value + "' BETWEEN DateFrom AND DateTo) AND (OBT_Status = '1' OR OBT_Status = '2') and id != " + HiddenEmpID.Value + "", ""))
            {
                ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Duplicate OBT is not allowed.');", true);
                return;
            }
            if (cm.ItemExist("TBL_HOLIDAY", "*", "where Holiday BETWEEN '" + upd_from.Value + "' AND '" + upd_to.Value + "'", ""))
            {
                ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Filing OBT during Holiday is not allowed.');", true);
                return;
            }
            //if (cm.ItemExist("TBL_OBT", "id", "where EmpID = '" + empno + "' and TripDate = '" + upd_from.Value + "' AND OBT_Status = '1' and id != "+HiddenEmpID.Value+"", ""))
            //{
            //    ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Duplicate OBT is not allowed.');", true);
            //    return;
            //}
            string confirmValue = Request.Form["confirm_value"];
            if (confirmValue == "Yes")
            {
                getdata();
                if (cm.UpdateQueryCommon(saveUpdateParam(out emailParam), "TBL_OBT", "id = '" + HiddenEmpID.Value + "'"))
                {
                    int ret = cm.sendApprove(emailParam, "OBT Approval Request");
                    if (ret > 0)
                    {
                        addlogs();
                        ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Successfully updated !!!');", true);
                    }
                    else
                    {
                        addlogs();
                        ScriptManager.RegisterClientScriptBlock(this.Page, this.Page.GetType(), "alert", " alert('Successfully Save !!! Email not sent');", true);
                    }
                    closeTransDetails();
                    refresh();
                }
                
            }
        }

        protected void btnExport_Click(object sender, EventArgs e)
        {
            Response.Clear();
            Response.Buffer = true;
            Response.ContentType = "application/octet-stream";
            Response.AddHeader("content-disposition", "attachment;filename= OBT" + empno + ".xls");
            Response.ContentType = "application/vnd.ms-excel";
            Response.Charset = "";
            this.EnableViewState = false;

            System.IO.StringWriter swriter = new System.IO.StringWriter();
            System.Web.UI.HtmlTextWriter htmlwriter = new System.Web.UI.HtmlTextWriter(swriter);

            DataGrid dg = new DataGrid();
            dg.DataSource = tk.populateGridOBT(empno);
            dg.DataBind();

            dg.RenderControl(htmlwriter);


            Response.Write(swriter.ToString());
            cm.AddLog("User " + Session["USER_DISPLAY_NAME"].ToString().ToUpper() + " exported Announcements",
            "EXPORT", "ANNOUNCEMENT", Session["EMP_ID"].ToString(), "ANNOUNCEMENT", Session["EMP_ID"].ToString());
            Response.End();
            //exportTOxlsx();


        }
    }
}