using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.IO;
using iTextSharp.text;
using iTextSharp.text.html.simpleparser;
using iTextSharp.text.pdf;
using System.Data;

namespace HRIS_APPELECTRIC.Pages.Admin.Reports
{
    public partial class OBTSummary : System.Web.UI.Page
    {
        Employee emp = new Employee();
        Common cm = new Common();
        Timekeeping tk = new Timekeeping();
        public string empno = "";
        protected void Page_Load(object sender, EventArgs e)
        {
            empno = Request.QueryString["empid"];

            if (!IsPostBack)
            {
                refresh();
            }
        }
        private void refresh()
        {
            ddlComp.Items.AddRange(emp.GetDropDownMenuList("TBL_COMPANY", "CoName"));
            ddlComp.DataValueField = emp.GetDropDownMenuList("TBL_COMPANY", "id").ToString();
            ddlDept.Items.AddRange(emp.GetDropDownMenuList("TBL_DEPARTMENT", "DeptName"));
            ddlDept.DataValueField = emp.GetDropDownMenuList("TBL_DEPARTMENT", "id").ToString();

        }
        protected void btnSearch_Click(object sender, EventArgs e)
        {
            string dates = "B.TripDate BETWEEN '" + txt_txtBussDate.Value + "' AND '" + txt_txtEndDate.Value + "'";
            string company = cm.GetSpecificDataFromDB("id", "TBL_COMPANY", "where CoName = '" + ddlComp.SelectedItem.ToString() + "'");
            string department = cm.GetSpecificDataFromDB("id", "TBL_DEPARTMENT", "where DeptName = '" + ddlDept.SelectedItem.ToString() + "'");
            string comp = "D.id =" + company;
            string dept = "E.id =" + department;

            if (ddlComp.SelectedIndex != 0)
            {
                string expr = dates + " AND " + comp;
                GridOBT.DataSource = tk.populateGridOBTSummaryCol(expr);
                GridOBT.DataBind();
            }
            if (ddlDept.SelectedIndex != 0)
            {
                string expr = dates + " AND " + dept;
                GridOBT.DataSource = tk.populateGridOBTSummaryCol(expr);
                GridOBT.DataBind();
            }
            if (ddlComp.SelectedIndex != 0 && ddlDept.SelectedIndex != 0)
            {
                string expr = dates + " AND " + dept + " AND " + comp;
                GridOBT.DataSource = tk.populateGridOBTSummaryCol(expr);
                GridOBT.DataBind();
            }
            if (ddlComp.SelectedIndex == 0 && ddlDept.SelectedIndex == 0)
            {
                string expr = dates;
                GridOBT.DataSource = tk.populateGridOBTSummaryCol(expr);
                GridOBT.DataBind();
            }
        }
        protected void btnExport_Click(object sender, EventArgs e)
        {
            string dates = "B.TripDate BETWEEN '" + txt_txtBussDate.Value + "' AND '" + txt_txtEndDate.Value + "'";
            string company = cm.GetSpecificDataFromDB("id", "TBL_COMPANY", "where CoName = '" + ddlComp.SelectedItem.ToString() + "'");
            string department = cm.GetSpecificDataFromDB("id", "TBL_DEPARTMENT", "where DeptName = '" + ddlDept.SelectedItem.ToString() + "'");
            string comp = "D.id =" + company;
            string dept = "E.id =" + department;
            DataGrid dg = new DataGrid();

            if (ddlComp.SelectedIndex != 0)
            {
                string expr = dates + " AND " + comp;
                dg.DataSource = tk.populateGridOBTSummaryCol(expr);
                dg.DataBind();
            }
            if (ddlDept.SelectedIndex != 0)
            {
                string expr = dates + " AND " + dept;
                dg.DataSource = tk.populateGridOBTSummaryCol(expr);
                dg.DataBind();
            }
            if (ddlComp.SelectedIndex != 0 && ddlDept.SelectedIndex != 0)
            {
                string expr = dates + " AND " + dept + " AND " + comp;
                dg.DataSource = tk.populateGridOBTSummaryCol(expr);
                dg.DataBind();
            }
            if (ddlComp.SelectedIndex == 0 && ddlDept.SelectedIndex == 0)
            {
                string expr = dates;
                dg.DataSource = tk.populateGridOBTSummaryCol(expr);
                dg.DataBind();
            }


            if (dg.Items.Count > 0)
            {
                Response.Clear();
                Response.Buffer = true;
                Response.ContentType = "application/octet-stream";
                Response.AddHeader("content-disposition", "attachment;filename= OBTSummary" + txt_txtBussDate.Value + "-" + txt_txtEndDate.Value + ".xls");
                Response.ContentType = "application/vnd.ms-excel";
                Response.Charset = "";
                this.EnableViewState = false;

                System.IO.StringWriter swriter = new System.IO.StringWriter();
                System.Web.UI.HtmlTextWriter htmlwriter = new System.Web.UI.HtmlTextWriter(swriter);

                //DataGrid dg = new DataGrid();
                //dg.DataSource = tk.populateGridSchedule();
                //dg.DataBind();


                dg.RenderControl(htmlwriter);


                Response.Write(swriter.ToString());
                Response.End();
                //exportTOxlsx();
            }
            else
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(),
               "alert",
               "alert('No data to export!!!');",
               true);
            }
        }
    }
}